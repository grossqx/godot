on:
  workflow_call:
    inputs:
      version_status:
        required: false
        type: string
        default: stable
      build_name:
        required: false
        type: string
        default: custom_build
      godot_tag:
        required: true
        type: string
      godot_version:
        required: true
        type: string
      godotsteam_ref:
        required: true
        type: string
      multiplayer_peer_ref:
        required: true
        type: string
      steamworks_sdk_ref:
        required: true
        type: string
    secrets:
      steamworks_sdk_repo:
        required: true
      steamorks_ssh_deploy_key:
        required: true
      godot_encryption_key:
        required : false


jobs:
  build-linux:
    runs-on: ubuntu-latest


    name: Linux ${{ matrix.name }}


    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor and Templates (64-bit)
            bits: x86_64
            cache-name: linux64
            editor-name: godot.linuxbsd.editor.x86_64
            editor-name-new: godotsteam.${{ inputs.godot_version }}.editor.linux.x86_64
            debug-name: godot.linuxbsd.template_debug.x86_64
            debug-name-new: godotsteam.${{ inputs.godot_version }}.debug.template.linux.x86_64
            release-name: godot.linuxbsd.template_release.x86_64
            release-name-new: godotsteam.${{ inputs.godot_version }}.template.linux.x86_64
            steam-redist: libsteam_api.so
            steam-redist-bin: linux64/
            steam-redist-bits: 64
          
          #- name: Editor and Templates (32-bit)
          #  bits: x86_32
          #  cache-name: linux32
          #  editor-name: godot.linuxbsd.editor.x86_32
          #  editor-name-new: godotsteam.${{ inputs.godot_version }}.editor.linux.x86_32
          #  debug-name: godot.linuxbsd.template_debug.x86_32
          #  debug-name-new: godotsteam.${{ inputs.godot_version }}.debug.template.linux.x86_32
          #  release-name: godot.linuxbsd.template_release.x86_32
          #  release-name-new: godotsteam.${{ inputs.godot_version }}.template.linux.x86_32
          #  steam-redist: libsteam_api.so
          #  steam-redist-bin: linux32/
          #  steam-redist-bits: 64


    steps:
      - name: Check out Godot's fork repository code
        uses: actions/checkout@v4

      # Preempt the missing bin folder
      - name: Preempt missing Bin Folder
        shell: bash
        run: |
          mkdir ./bin/

      # Download GodotSteam
      - name: Download GodotSteam
        uses: ./.github/actions/download-godotsteam
        with:
          ref: ${{ inputs.godotsteam_ref }}

      # Download SteamMultiplayerPeer
      - name: Download SteamMultiplayerPeer
        uses: ./.github/actions/download-godotsteam-multiplayer-peer
        with:
          ref: ${{ inputs.multiplayer_peer_ref }}

      # Download Steamworks SDK
      - name: Download Steamworks SDK
        uses: ./.github/actions/download-steamworks
        with:
          path: "steamworks-sdk"
          repository: ${{ secrets.steamworks_sdk_repo }}
          ssh_deploy_key: ${{ secrets.steamorks_ssh_deploy_key }}
          ref: ${{ inputs.steamworks_sdk_ref }}
      
      # Check files
      - run: ls ${{ github.workspace }}

      # Check files
      - run: ls ${{ github.workspace }}/modules

      # Check files
      - run: ls ${{ github.workspace }}/modules/godotsteam/sdk

      # Check files
      - run: ls ${{ github.workspace }}/modules/godotsteam/sdk/public

      # Check files
      - run: ls ${{ github.workspace }}/modules/godotsteam/sdk/redistributable_bin
  
      # Setting up the Linux buildroot for older versions
      #- name: Setup Linux Buildroot (x64_64)
      #  uses: ./.github/actions/prep-buildroot
      #  with:
      #    toolchain-name: "x86_64-godot-linux-gnu_sdk-buildroot"

      # Get that cache money
      - name: Setup Build Cache
        uses: ./.github/actions/setup-cache
        with:
          cache-name: ${{ matrix.cache-name }}
          godot-base: ${{ inputs.godot_tag }}
        continue-on-error: true

      # Setup Python and SCONS
      - name: Setup Python and SCONS
        uses: ./.github/actions/setup-dependencies

      # Compiling editor
      - name: Editor Compilation
        uses: ./.github/actions/build-godot
        with:
          version_status: ${{ inputs.version_status }}
          build_name: ${{ inputs.build_name }}
          #buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          #sconsflags: bits=64
          sconsflags: arch=${{ matrix.bits }}
          platform: linuxbsd
          target: editor
          binary: ${{ matrix.editor-name }}
          export: ${{ matrix.editor-name-new }}
          godot_encryption_key: ${{ secrets.godot_encryption_key }}

      - name: Upload Editor
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-editor
          path: ./bin/${{ matrix.editor-name-new }}

      # Check files
      - run: ls ${{ github.workspace }}/bin

      - name: Clear bin
        run: |
          rm -rf bin

      # Compiling Debug Template
      - name: Debug Template Compilation (target=template_debug)
        uses: ./.github/actions/build-godot
        with:
          version_status: ${{ inputs.version_status }}
          build_name: ${{ inputs.build_name }}
          #buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          #sconsflags: bits=64
          sconsflags: arch=${{ matrix.bits }}
          platform: linuxbsd
          target: template_debug
          binary: ${{ matrix.debug-name }}
          export: ${{ matrix.debug-name-new }}
          godot_encryption_key: ${{ secrets.godot_encryption_key }}

      # Uploading Debug Template artifact
      - name: Upload Debug Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-debug-template
          path: ./bin/${{ matrix.debug-name-new }}

      # Compiling Release Template
      - name: Release Template Compilation (target=template_release)
        uses: ./.github/actions/build-godot
        with:
          version_status: ${{ inputs.version_status }}
          build_name: ${{ inputs.build_name }}
          #buildroot: "${{ github.workspace }}/x86_64-godot-linux-gnu_sdk-buildroot/bin"
          #sconsflags: bits=64 debug_symbols=no
          sconsflags: arch=${{ matrix.bits }} debug_symbols=no
          platform: linuxbsd
          target: template_release
          binary: ${{ matrix.release-name }}
          export: ${{ matrix.release-name-new }}
          godot_encryption_key: ${{ secrets.godot_encryption_key }}
      
      # Uploading Release Template artifact
      - name: Upload Release Template
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}-release-template
          path: ./bin/${{ matrix.release-name-new }}

      # Check files
      - run: ls ${{ github.workspace }}/bin

      - name: Clear bin
        run: |
          rm -rf bin

      # Upload the Steam redistributable for packaging
      - name: Upload Linux Steam File
        uses: ./.github/actions/upload-steam-redistributable
        with:
          name: linux${{ matrix.steam-redist-bits }}-steam
          path: ${{ matrix.steam-redist-bin }}
          redist: ${{ matrix.steam-redist }}